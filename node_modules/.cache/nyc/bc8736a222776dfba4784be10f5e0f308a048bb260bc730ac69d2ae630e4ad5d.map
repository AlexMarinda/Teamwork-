{"version":3,"sources":["article.js"],"names":["Article","req","res","getUser","jwt","decode","headers","authorization","split","newArticle","article_id","articles","length","title","body","article","createdOn","format","user_id","status","push","send","message","data","findArticle","find","t","parseInt","params","splice","findComment","comments","comment_id","comment","newComment"],"mappings":"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","sourceRoot":"/private/var/root/Documents/teamwork-backend/server/controllers","sourcesContent":["import articles  from '../model/article';\nimport comments from '../model/comment';\nimport moment from 'moment';\nimport jwt from 'jsonwebtoken';\n\n\nclass Article {\n    \n\n\nstatic  createArticle(req, res) {\nconst getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\nconst newArticle = {\narticle_id:articles.length + 1,\ntitle:req.body.title,\narticle:req.body.article,\ncreatedOn:moment().format(),\nuser_id: getUser.user_id,\nstatus:\"unshare\"\n\n};\n\n    articles.push(newArticle);\n\n\nif(newArticle)\n res.status(201).send({ status: 201, message:'article successfully created',data: { ...newArticle } });\nreturn res.status(400).send({ status: 400,'message':'article not created' });\n\n}\n\nstatic  deleteArticle (req, res) {\n  const getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\n    const findArticle =   articles.find(t => t.article_id === parseInt(req.params.article_id));\n    if(findArticle){\n       \n       if(getUser.user_id === findArticle.user_id){\n       articles.splice(findArticle,1);\n\n  \n        return res.status(200).send({ status: 200, 'message': 'article successfully deleted', data: {\n          title:findArticle.title,\n          article:findArticle.article}});\n      }\n      else{\n        return res.status(400).send({ status: 400, 'message':'You did not make this article with article_id'});\n      }\n     } \n     else {\n          return res.status(400).send({ status: 404,  'message':'article not found!'});\n     }\n     }\n\n\n     static  editArticle (req, res) {\n      const getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\n        const findArticle =   articles.find(t => t.article_id === parseInt(req.params.article_id));\n        if(findArticle){\n           \n           if(getUser.user_id === findArticle.user_id){\n\n            findArticle.article = req.body.article;\n    \n      \n            return res.status(200).send({ status: 200, 'message': 'article successfully edited', data: {\n              title:findArticle.title,\n              article:findArticle.article}});\n          }\n          else{\n            return res.status(400).send({ status: 400, 'message':'You did not make this article with article_id'});\n          }\n         } \n         else {\n              return res.status(400).send({ status: 404,  'message':'article not found!'});\n         }\n         }\n\n\n         static  getSpecificArticle(req, res) {\n          \n          const findArticle =   articles.find(t => t.article_id === parseInt(req.params.article_id));\n          const findComment =   comments.find(t => t.article_id === parseInt(req.params.article_id));\n  \n          \n          \n          if(findArticle)\n          if(findArticle.status==='share'){\n            const comments = [{\n              comment_id:findComment.comment_id,\n              comment:findComment.comment,\n              user_id:findComment.user_id,\n            }\n            ];\n\n\n  \n              return res.status(200).send({ status: 200, 'message': 'article successfully edited', data: {\n                title:findArticle.title,\n                article:findArticle.article,\n                createdOn:findArticle.createdOn,\n                user_id:findArticle.user_id,\n                comments}});\n                \n               \n\n              }\n              else{\n                return res.status(400).send({ status: 400,  'message':'this article is not published now!'});\n                \n              }\n              return res.status(404).send({ status: 404,  'message':'article not found!'});\n          \n      \n      }\n\n\n\n      static  comment (req, res) {\n        const getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\n          const findArticle =   articles.find(t => t.article_id === parseInt(req.params.article_id));\n          if(findArticle){\n             \n             if(findArticle.status === 'share'){\n              const newComment = {\n                comment_id:comments.length + 1,\n                createdOn:moment().format(),\n                article_id:findArticle.article_id,\n                user_id: getUser.user_id,\n                comment:req.body.comment\n                \n                };\n  \n              comments.push(newComment);\n      \n        \n              return res.status(201).send({ status: 201, 'message': 'relevant-success-message', data: {\n                createdOn:newComment.createdOn,\n                title:findArticle.title,\n                article:findArticle.article,\n              comment:newComment.comment}});\n            }\n            else{\n              return res.status(400).send({ status: 400, 'message':'this article is not published now'});\n            }\n           } \n           else {\n                return res.status(400).send({ status: 404,  'message':'article not found!'});\n           }\n           }\n\n\n\n\n}\nexport default Article;"]}