{"version":3,"sources":["validation.js"],"names":["Validation","req","res","next","schema","Joi","object","keys","title","string","trim","min","max","required","article","checkValidator","comment","number","email","minDomainSegments","first_name","strict","regex","last_name","alphanum","gender","jobRole","validate","body","abortEarly","convert","error","errors","details","errArr","forEach","err","push","message","split","join","status","json"],"mappings":"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","sourceRoot":"/private/var/root/Documents/teamwork-backend/server/middleware","sourcesContent":["import Joi from '@hapi/joi';\n\n\n // all validation operation \n export class Validation {\n \n// article attributes validator\n  static createArticleValidator(req, res, next) {\n    const schema = Joi.object().keys({\n        title: Joi.string()\n        .trim()\n        .min(2)\n        .max(50)\n        .required(),\n        article: Joi.string()\n        .trim()\n        .min(10)\n        .max(500)\n        .required(),    \n    });\n\n    checkValidator(req, res, schema, next);\n  }\n\n // comment  attributes validator\n\n static createCommentValidator(req, res, next) {\n  const schema = Joi.object().keys({\n    comment: Joi.number()\n      .min(2)\n      .max(50)\n      .required(),\n\n\n\n  });\n  checkValidator(req, res, schema, next);\n}\n\n // edit article  attributes validator\n\n static editArticleValidator(req, res, next) {\n    const schema = Joi.object().keys({\n      article: Joi.number()\n        .min(10)\n        .max(500)\n        .required(),\n  \n  \n  \n    });\n    checkValidator(req, res, schema, next);\n  }\n  // user attributes validator\n\n  static userValidator(req, res, next) {\n    const schema = Joi.object().keys({\n      email: Joi.string()\n        .email({ minDomainSegments: 2 })\n        .required(),\n      first_name: Joi.string()\n        .strict()\n        .trim()\n        .regex(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/)\n        .min(2)\n        .max(30)\n        .required(),\n      last_name: Joi.string()\n        .alphanum()\n        .strict()\n        .trim()\n        .regex(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/)\n        .min(2)\n        .max(30)\n        .required(),\n        gender: Joi.string()\n        .alphanum()\n        .strict()\n        .trim()\n        .regex(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/)\n        .min(4)\n        .max(6)\n        .required(),\n        jobRole: Joi.string()\n        .alphanum()\n        .strict()\n        .trim()\n        .regex(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/)\n        .min(2)\n        .required(),\n        jobRole: Joi.string()\n        .alphanum()\n        .strict()\n        .trim()\n        .regex(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/)\n        .min(2)\n        .required(),\n      password: Joi.string()\n        .min(7)\n        .max(50)\n        .required(),\n\n    });\n    checkValidator(req, res, schema, next);\n\n\n\n  }\n\n\n\n}\n\nexport const checkValidator = (req, res, schema, next) => {\n  const { error } = Joi.validate(req.body, schema, {abortEarly: false,convert: true });\n  if (error) {\n    const errors = [];\n    const { details: errArr = [] } = error || {};\n    errArr.forEach(err => {\n      errors.push(err.message.split('\"').join(''));\n    });\n    return res.status(400).json({ status: 400, message:errors});\n \n  }\n  return next();\n\n};\n\n\n"]}