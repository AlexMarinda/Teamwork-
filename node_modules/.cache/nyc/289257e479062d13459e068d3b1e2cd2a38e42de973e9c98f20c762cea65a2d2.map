{"version":3,"sources":["article.js"],"names":["Article","req","res","newArticle","id","articles","length","title","body","article","createdOn","format","status","push","send","message","data","findArticle","find","t","parseInt","params","findBook","bookings","splice"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;;;;;IAEMA,O;;;;;;;;;AAEN;kCAEsBC,G,EAAKC,G,EAAK;AAChC,UAAMC,UAAU,GAAG;AACnBC,QAAAA,EAAE,EAACC,oBAASC,MAAT,GAAkB,CADF;AAEnBC,QAAAA,KAAK,EAACN,GAAG,CAACO,IAAJ,CAASD,KAFI;AAGnBE,QAAAA,OAAO,EAACR,GAAG,CAACO,IAAJ,CAASC,OAHE;AAInBC,QAAAA,SAAS,EAAC,0BAASC,MAAT,EAJS;AAKnBC,QAAAA,MAAM,EAAC;AALY,OAAnB;;AASIP,0BAASQ,IAAT,CAAcV,UAAd,EAV4B,CAYhC;;;AACA,UAAGA,UAAH,EACCD,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AAAEF,QAAAA,MAAM,EAAE,GAAV;AAAeG,QAAAA,OAAO,EAAC,8BAAvB;AAAsDC,QAAAA,IAAI,oBAAOb,UAAP;AAA1D,OAArB;AACD,aAAOD,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AAAEF,QAAAA,MAAM,EAAE,GAAV;AAAc,mBAAU;AAAxB,OAArB,CAAP;AAEC;;;kCAEqBX,G,EAAKC,G,EAAK;AAC5B,UAAMe,WAAW,GAAKZ,oBAASa,IAAT,CAAc,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACf,EAAF,KAASgB,QAAQ,CAACnB,GAAG,CAACoB,MAAJ,CAAWjB,EAAZ,CAArB;AAAA,OAAf,CAAtB;;AACA,UAAGkB,QAAH,EAAY;AACT;AACAC,QAAAA,QAAQ,CAACC,MAAT,CAAgBF,QAAhB,EAAyB,CAAzB;AAEC,eAAOpB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AAAEF,UAAAA,MAAM,EAAE,SAAV;AAAqBI,UAAAA,IAAI,EAAE;AAA3B,SAArB,CAAP;AACF,OALF,MAMM;AACA,eAAOd,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AAAEF,UAAAA,MAAM,EAAE,SAAV;AAAqBI,UAAAA,IAAI,EAAE;AAClD,uBAAU;AADwC;AAA3B,SAArB,CAAP;AAEJ;AACA;;;;;eAKShB,O","sourceRoot":"/private/var/root/Documents/teamwork-backend/server/controllers","sourcesContent":["import articles  from '../model/article';\nimport moment from 'moment';\n\nclass Article {\n    \n// trip created\n\nstatic  createArticle(req, res) {\nconst newArticle = {\nid:articles.length + 1,\ntitle:req.body.title,\narticle:req.body.article,\ncreatedOn:moment().format(),\nstatus:\"unshare\"\n\n};\n\n    articles.push(newArticle);\n\n// trip response\nif(newArticle)\n res.status(201).send({ status: 201, message:'article successfully created',data: { ...newArticle } });\nreturn res.status(400).send({ status: 400,'message':'article not created' });\n\n}\n\nstatic  deleteBooking(req, res) {\n    const findArticle =   articles.find(t => t.id === parseInt(req.params.id));\n    if(findBook){\n       // const c_trip=trip.indexOf(findTrip);\n       bookings.splice(findBook,1);\n  \n        return res.status(200).send({ status: 'success', data: 'Trip cancelled successfully'});\n     } \n     else {\n          return res.status(200).send({ status: 'success', data: { \n               'message':'booking not found!'}});\n     }\n     }\n\n\n\n}\nexport default Article;"]}