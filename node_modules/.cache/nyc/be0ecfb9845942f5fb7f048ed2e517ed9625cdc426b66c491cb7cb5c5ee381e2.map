{"version":3,"sources":["article.js"],"names":["Article","req","res","getUser","jwt","decode","headers","authorization","split","newArticle","article_id","articles","length","title","body","article","category","createdOn","format","user_id","inappropriate","status","push","send","message","data","findArticle","find","t","parseInt","params","filter","reverse","findComment","comments","comment_id","comment","splice","newComment","query"],"mappings":"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","sourceRoot":"/private/var/root/Documents/Teamwork/server/controllers","sourcesContent":["import moment from 'moment';\nimport jwt from 'jsonwebtoken';\nimport articles from '../model/article';\n\nimport comments from '../model/comment';\n\n\nclass Article {\n  static createArticle(req, res) {\n    const getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\n    const newArticle = {\n      article_id: articles.length + 1,\n      title: req.body.title,\n      article: req.body.article,\n      category: req.body.category,\n      createdOn: moment().format(),\n      user_id: getUser.user_id,\n      inappropriate: 0,\n      status: 'unshare',\n\n    };\n\n    articles.push(newArticle);\n\n\n    if (newArticle) { res.status(201).send({ status: 201, message: 'article successfully created', data: { ...newArticle } }); }\n    return res.status(400).send({ status: 400, message: 'article not created' });\n  }\n\n  static shareArticle(req, res) {\n    const getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\n    const findArticle = articles.find((t) => t.article_id === parseInt(req.params.article_id));\n    if (findArticle) {\n      if (getUser.user_id === findArticle.user_id) {\n        findArticle.status = 'share';\n\n\n        return res.status(200).send({\n          status: 200,\n          message: 'article successfully shared',\n          data: {\n            title: findArticle.title,\n            article: findArticle.article,\n            status: findArticle.status,\n          },\n        });\n      }\n\n      return res.status(400).send({ status: 400, message: 'You did not make this article with article_id' });\n    }\n\n    return res.status(404).send({ status: 404, message: 'article not found!' });\n  }\n\n  static getAllArticle(req, res) {\n    const findArticle = articles.filter((t) => t.status === 'share');\n\n    if (findArticle) {\n      // findArticle.sort();\n      findArticle.reverse();\n\n\n      return res.status(200).send({\n        status: 200,\n        message: 'success',\n        data:\n          findArticle,\n      });\n    }\n    return res.status(404).send({ status: 404, message: 'article not found!' });\n  }\n\n\n  static getSpecificArticle(req, res) {\n    const findArticle = articles.find((t) => t.article_id === parseInt(req.params.article_id));\n    const findComment = comments.find((t) => t.article_id === parseInt(req.params.article_id));\n\n\n    if (findArticle) {\n      if (findArticle.status === 'share') {\n        const comments = [{\n          comment_id: findComment.comment_id,\n          comment: findComment.comment,\n          user_id: findComment.user_id,\n        },\n        ];\n\n\n        return res.status(200).send({\n          status: 200,\n          message: 'success',\n          data: {\n            title: findArticle.title,\n            article: findArticle.article,\n            createdOn: findArticle.createdOn,\n            user_id: findArticle.user_id,\n            comments,\n          },\n        });\n      }\n\n      return res.status(400).send({ status: 400, message: 'this article is not published now!' });\n    }\n    return res.status(404).send({ status: 404, message: 'article not found!' });\n  }\n\n  static editArticle(req, res) {\n    const getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\n    const findArticle = articles.find((t) => t.article_id === parseInt(req.params.article_id));\n    if (findArticle) {\n      if (getUser.user_id === findArticle.user_id) {\n        findArticle.article = req.body.article;\n\n\n        return res.status(200).send({\n          status: 200,\n          message: 'article successfully edited',\n          data: {\n            title: findArticle.title,\n            article: findArticle.article,\n          },\n        });\n      }\n\n      return res.status(400).send({ status: 400, message: 'You did not make this article with article_id' });\n    }\n\n    return res.status(404).send({ status: 404, message: 'article not found!' });\n  }\n\n\n  static deleteArticle(req, res) {\n    const getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\n    const findArticle = articles.find((t) => t.article_id === parseInt(req.params.article_id));\n    if (findArticle) {\n      if (getUser.user_id === findArticle.user_id) {\n        articles.splice(findArticle, 1);\n\n\n        return res.status(200).send({\n          status: 200,\n          message: 'article successfully deleted',\n          data: {\n            title: findArticle.title,\n            article: findArticle.article,\n          },\n        });\n      }\n\n      return res.status(400).send({ status: 400, message: 'You did not make this article with article_id' });\n    }\n\n    return res.status(404).send({ status: 404, message: 'article not found!' });\n  }\n\n\n  static comment(req, res) {\n    const getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\n    const findArticle = articles.find((t) => t.article_id === parseInt(req.params.article_id));\n    if (findArticle) {\n      if (findArticle.status === 'share') {\n        const newComment = {\n          comment_id: comments.length + 1,\n          createdOn: moment().format(),\n          article_id: findArticle.article_id,\n          user_id: getUser.user_id,\n          inappropriate: 0,\n          comment: req.body.comment,\n\n        };\n\n        comments.push(newComment);\n\n\n        return res.status(201).send({\n          status: 201,\n          message: 'relevant-success-message',\n          data: {\n            createdOn: newComment.createdOn,\n            title: findArticle.title,\n            article: findArticle.article,\n            comment: newComment.comment,\n          },\n        });\n      }\n\n      return res.status(400).send({ status: 400, message: 'this article is not published now' });\n    }\n\n    return res.status(404).send({ status: 404, message: 'article not found!' });\n  }\n\n  static filterArticle(req, res) {\n    const findArticle = articles.filter((t) => t.category === req.query.category);\n\n    if (findArticle) {\n      // findArticle.sort();\n      findArticle.reverse();\n      return res.status(200).send({ status: 200, message: 'success', data: findArticle });\n    }\n    return res.status(404).send({ status: 404, message: 'article not found!' });\n  }\n}\nexport default Article;\n"]}