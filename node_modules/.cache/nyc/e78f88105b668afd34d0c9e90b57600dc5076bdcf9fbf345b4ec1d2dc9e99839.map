{"version":3,"sources":["validation.js"],"names":[],"mappings":"AAAA","sourceRoot":"/private/var/root/Documents/teamwork-backend/server/middleware","sourcesContent":["/*import Joi from '@hapi/joi';\n\n\n // all validation operation \n export class Validation {\n \n// article attributes validator\n  static createArticleValidator(req, res, next) {\n    const schema = Joi.object().keys({\n        title: Joi.string()\n        .trim()\n        .min(2)\n        .max(50)\n        .required(),\n        article: Joi.string()\n        .trim()\n        .min(10)\n        .max(500)\n        .required(),    \n    });\n\n    checkValidator(req, res, schema, next);\n  }\n\n // comment  attributes validator\n\n static createCommentValidator(req, res, next) {\n  const schema = Joi.object().keys({\n    comment: Joi.number()\n      .min(2)\n      .max(50)\n      .required(),\n\n\n\n  });\n  checkValidator(req, res, schema, next);\n}\n\n // edit article  attributes validator\n\n static editArticleValidator(req, res, next) {\n    const schema = Joi.object().keys({\n      article: Joi.number()\n        .min(10)\n        .max(500)\n        .required(),\n  \n  \n  \n    });\n    checkValidator(req, res, schema, next);\n  }\n  // user attributes validator\n\n  static userValidator(req, res, next) {\n    const schema = Joi.object().keys({\n      email: Joi.string()\n        .email({ minDomainSegments: 2 })\n        .required(),\n      first_name: Joi.string()\n        .strict()\n        .trim()\n        .regex(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/)\n        .min(2)\n        .max(30)\n        .required(),\n      last_name: Joi.string()\n        .alphanum()\n        .strict()\n        .trim()\n        .regex(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/)\n        .min(2)\n        .max(30)\n        .required(),\n        gender: Joi.string()\n        .alphanum()\n        .strict()\n        .trim()\n        .regex(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/)\n        .min(4)\n        .max(6)\n        .required(),\n        jobRole: Joi.string()\n        .alphanum()\n        .strict()\n        .trim()\n        .regex(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/)\n        .min(2)\n        .required(),\n        jobRole: Joi.string()\n        .alphanum()\n        .strict()\n        .trim()\n        .regex(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/)\n        .min(2)\n        .required(),\n      password: Joi.string()\n        .min(7)\n        .max(50)\n        .required(),\n\n    });\n    checkValidator(req, res, schema, next);\n\n\n\n  }\n\n\n\n}\n\nexport const checkValidator = (req, res, schema, next) => {\n  const { error } = Joi.validate(req.body, schema, {abortEarly: false,convert: true });\n  if (error) {\n    const errors = [];\n    const { details: errArr = [] } = error || {};\n    errArr.forEach(err => {\n      errors.push(err.message.split('\"').join(''));\n    });\n    return res.status(400).json({ status: 400, message:errors});\n \n  }\n  return next();\n\n};*/\n\n\n"]}