{"version":3,"sources":["admin.js"],"names":["Admin","req","res","findComment","comments","find","t","comment_id","parseInt","params","inappropriate","splice","status","send","data","comment","createdOn","findArticle","articles","article_id","title","article"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAGMA,K;;;;;;;;;iCAEcC,G,EAAKC,G,EAAI;AAIvB,UAAMC,WAAW,GAAGC,oBAASC,IAAT,CAAc,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,UAAF,KAAiBC,QAAQ,CAACP,GAAG,CAACQ,MAAJ,CAAWF,UAAZ,CAA7B;AAAA,OAAf,CAApB;;AACA,UAAGJ,WAAW,IAAIA,WAAW,CAACO,aAAZ,IAA2B,CAA7C,EAA+C;AAG7CN,4BAASO,MAAT,CAAgBR,WAAhB,EAA4B,CAA5B;;AAGF,eAAOD,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAe,qBAAW,8BAA1B;AAA0DE,UAAAA,IAAI,EAAE;AAACP,YAAAA,UAAU,EAACJ,WAAW,CAACI,UAAxB;AAC1FQ,YAAAA,OAAO,EAACZ,WAAW,CAACY,OADsE;AAC9DC,YAAAA,SAAS,EAACb,WAAW,CAACa;AADwC;AAAhE,SAArB,CAAP;AAIE,OAVF,MAWM;AACA,eAAOd,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAgB,qBAAU;AAA1B,SAArB,CAAP;AACJ;AACA;;;kCACoBX,G,EAAKC,G,EAAI;AAI7B,UAAMe,WAAW,GAAGC,oBAASb,IAAT,CAAc,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACa,UAAF,KAAiBX,QAAQ,CAACP,GAAG,CAACQ,MAAJ,CAAWU,UAAZ,CAA7B;AAAA,OAAf,CAApB;;AACA,UAAGF,WAAW,IAAIA,WAAW,CAACP,aAAZ,IAA2B,CAA7C,EAA+C;AAG7CN,4BAASO,MAAT,CAAgBM,WAAhB,EAA4B,CAA5B;;AAGF,eAAOf,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAe,qBAAW,8BAA1B;AAA0DE,UAAAA,IAAI,EAAE;AAACM,YAAAA,KAAK,EAACH,WAAW,CAACG,KAAnB;AAC1FC,YAAAA,OAAO,EAACJ,WAAW,CAACI,OADsE;AAC9DL,YAAAA,SAAS,EAACC,WAAW,CAACD;AADwC;AAAhE,SAArB,CAAP;AAIE,OAVF,MAWM;AACA,eAAOd,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAgB,qBAAU;AAA1B,SAArB,CAAP;AACJ;AACA;;;;;eAKKZ,K","sourceRoot":"/private/var/root/Documents/teamwork-backend/server/controllers","sourcesContent":["import articles  from '../model/article';\nimport comments from '../model/comment';\nimport moment from 'moment';\nimport jwt from 'jsonwebtoken';\n\n\nclass Admin {\n\nstatic deleteComent(req, res){\n\n\n    \n      const findComment = comments.find(t => t.comment_id === parseInt(req.params.comment_id));\n      if(findComment && findComment.inappropriate>=1){\n      \n         \n        comments.splice(findComment,1);\n  \n    \n      return res.status(200).send({ status: 200, 'message': 'comment successfully deleted', data: {comment_id:findComment.comment_id,\n        comment:findComment.comment,createdOn:findComment.createdOn}});\n       \n      \n       } \n       else {\n            return res.status(404).send({ status: 404,  'message':'comment not found!'});\n       }\n       }\n       static deleteArticle(req, res){\n\n\n    \n        const findArticle = articles.find(t => t.article_id === parseInt(req.params.article_id));\n        if(findArticle && findArticle.inappropriate>=1){\n  \n           \n          comments.splice(findArticle,1);\n    \n      \n        return res.status(200).send({ status: 200, 'message': 'article successfully deleted', data: {title:findArticle.title,\n          article:findArticle.article,createdOn:findArticle.createdOn}});\n         \n        \n         } \n         else {\n              return res.status(404).send({ status: 404,  'message':'article not found!'});\n         }\n         }\n\n\n    }\n\nexport default Admin;"]}