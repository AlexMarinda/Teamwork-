{"version":3,"sources":["article.js"],"names":["Article","req","res","getUser","jwt","decode","headers","authorization","split","newArticle","article_id","articles","length","title","body","article","category","createdOn","format","user_id","inappropriate","status","push","send","message","data","findArticle","find","t","parseInt","params","splice","findComment","comments","comment_id","comment","filter","reverse","newComment","query"],"mappings":"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","sourceRoot":"/private/var/root/Documents/teamwork-backend/server/controllers","sourcesContent":["import articles  from '../model/article';\nimport comments from '../model/comment';\nimport moment from 'moment';\nimport jwt from 'jsonwebtoken';\n\n\nclass Article {\n    \n\n\nstatic  createArticle(req, res) {\nconst getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\nconst newArticle = {\narticle_id:articles.length + 1,\ntitle:req.body.title,\narticle:req.body.article,\ncategory:req.body.category,\ncreatedOn:moment().format(),\nuser_id: getUser.user_id,\ninappropriate:0,\nstatus:\"unshare\"\n\n};\n\n    articles.push(newArticle);\n\n\nif(newArticle)\n res.status(201).send({ status: 201, message:'article successfully created',data: { ...newArticle } });\nreturn res.status(400).send({ status: 400,'message':'article not created' });\n\n}\n\nstatic  deleteArticle (req, res) {\n  const getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\n    const findArticle =   articles.find(t => t.article_id === parseInt(req.params.article_id));\n    if(findArticle){\n       \n       if(getUser.user_id === findArticle.user_id){\n       articles.splice(findArticle,1);\n\n  \n        return res.status(200).send({ status: 200, 'message': 'article successfully deleted', data: {\n          title:findArticle.title,\n          article:findArticle.article}});\n      }\n      else{\n        return res.status(400).send({ status: 400, 'message':'You did not make this article with article_id'});\n      }\n     } \n     else {\n          return res.status(404).send({ status: 404,  'message':'article not found!'});\n     }\n     }\n\n\n     static  editArticle (req, res) {\n      const getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\n        const findArticle =   articles.find(t => t.article_id === parseInt(req.params.article_id));\n        if(findArticle){\n           \n           if(getUser.user_id === findArticle.user_id){\n\n            findArticle.article = req.body.article;\n    \n      \n            return res.status(200).send({ status: 200, 'message': 'article successfully edited', data: {\n              title:findArticle.title,\n              article:findArticle.article}});\n          }\n          else{\n            return res.status(400).send({ status: 400, 'message':'You did not make this article with article_id'});\n          }\n         } \n         else {\n              return res.status(404).send({ status: 404,  'message':'article not found!'});\n         }\n         }\n\n\n         static  getSpecificArticle(req, res) {\n          \n          const findArticle =   articles.find(t => t.article_id === parseInt(req.params.article_id));\n          const findComment =   comments.find(t => t.article_id === parseInt(req.params.article_id));\n  \n          \n          \n          if(findArticle)\n          if(findArticle.status==='share'){\n            const comments = [{\n              comment_id:findComment.comment_id,\n              comment:findComment.comment,\n              user_id:findComment.user_id,\n            }\n            ];\n\n\n  \n              return res.status(200).send({ status: 200, 'message': 'success', data: {\n                title:findArticle.title,\n                article:findArticle.article,\n                createdOn:findArticle.createdOn,\n                user_id:findArticle.user_id,\n                comments}});\n                \n               \n\n              }\n              else{\n                return res.status(400).send({ status: 400,  'message':'this article is not published now!'});\n                \n              }\n              return res.status(404).send({ status: 404,  'message':'article not found!'});\n          \n      \n      }\n\n\n      static  getAllArticle(req, res) {\n        const findArticle =   articles.filter(t => t.status === \"share\");\n          \n        if(findArticle){\n          //findArticle.sort();\n          findArticle.reverse();\n          \n\n            return res.status(200).send({ status: 200, 'message': 'success', data: \n            findArticle});\n              \n            }\n            return res.status(404).send({ status: 404,  'message':'article not found!'});\n        \n    \n    }\n\n\n\n\n\n      static  comment (req, res) {\n        const getUser = jwt.decode(req.headers.authorization.split(' ')[1]);\n          const findArticle =   articles.find(t => t.article_id === parseInt(req.params.article_id));\n          if(findArticle){\n             \n             if(findArticle.status === 'share'){\n              const newComment = {\n                comment_id:comments.length + 1,\n                createdOn:moment().format(),\n                article_id:findArticle.article_id,\n                user_id: getUser.user_id,\n                inappropriate:0,\n                comment:req.body.comment\n                \n                };\n  \n              comments.push(newComment);\n      \n        \n              return res.status(201).send({ status: 201, 'message': 'relevant-success-message', data: {\n                createdOn:newComment.createdOn,\n                title:findArticle.title,\n                article:findArticle.article,\n              comment:newComment.comment}});\n            }\n            else{\n              return res.status(400).send({ status: 400, 'message':'this article is not published now'});\n            }\n           } \n           else {\n                return res.status(404).send({ status: 404,  'message':'article not found!'});\n           }\n           }\n           static flagArticle(req, res){\n\n\n            const findArticle =   articles.find(t => t.article_id === parseInt(req.params.article_id));\n            \n            if(findArticle){\n               \n              findArticle.inappropriate=++findArticle.inappropriate;\n          \n            return res.status(200).send({ status: 200, 'message': 'article successfully flaged', data: {title:findArticle.title,\n              article:findArticle.article,\n              createdOn:findArticle.createdOn,\n              inappropriate:findArticle.inappropriate}});\n             \n            \n             } \n             else {\n                  return res.status(404).send({ status: 404,  'message':'Article not found!'});\n             }\n             }\n             static flagComment(req, res){\n\n\n              const findComment =   comments.find(t => t.comment_id === parseInt(req.params.comment_id));\n              \n              if(findComment){\n                 \n                findComment.inappropriate=++findComment.inappropriate;\n            \n              return res.status(200).send({ status: 200, 'message': 'comment successfully flaged', data: {\n                comment:findComment.comment,\n                createdOn:findComment.createdOn,\n                inappropriate:findComment.inappropriate}});\n               \n              \n               } \n               else {\n                    return res.status(404).send({ status: 404,  'message':'comment not found!'});\n               }\n               }\n\n\n               static  filterArticle(req, res) {\n                const findArticle =   articles.filter(t => t.category === req.query.category);\n                  \n                if(findArticle){\n                  //findArticle.sort();\n                 findArticle.reverse();\n                    return res.status(200).send({ status: 200, 'message': 'success', data:findArticle});\n                      \n                    }\n                    return res.status(404).send({ status: 404,  'message':'article not found!'});\n                \n            \n            }\n\n\n\n\n}\nexport default Article;"]}